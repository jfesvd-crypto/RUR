name: Build PDFs (combine then convert)
on:
  workflow_dispatch: {}
  push:
    branches: [ "main" ]
    paths:
      - 'spec/**/*.md'
      - 'docs/**/*.md'
      - '.github/workflows/build-pdfs.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0

      - name: Install Pandoc + TeX Live
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            pandoc \
            texlive-xetex \
            texlive-latex-recommended \
            texlive-latex-extra \
            texlive-fonts-recommended \
            texlive-lang-european \
            fonts-dejavu-core \
            lmodern

      - name: Combine Markdown into single files (EN/PL)
        shell: bash
        run: |
          set -euo pipefail

          make_combined() {
            local lang="$1" out="COMBINED_${lang}.md" title meta_lang
            if [ "$lang" = "pl" ]; then
              title="RUR Project Book (PL)"; meta_lang="pl-PL"
            else
              title="RUR Project Book (EN)"; meta_lang="en-US"
            fi

            # Zbierz ścieżki śledzonych plików (spec/… i/lub docs/…)
            git ls-files -z -- "spec/${lang}/**/*.md" "docs/${lang}/**/*.md" \
              | sort -zV > "${lang}.zlist" || true
            tr '\0' '\n' < "${lang}.zlist" > "${lang}-files.txt" || true
            local count
            count=$(grep -c . "${lang}-files.txt" || true)

            if [ "$count" -eq 0 ]; then
              echo "No ${lang} .md files found — skipping combine."
              : > "$out"
              return
            fi

            # Prosty nagłówek YAML – pandoc go odczyta
            cat > "$out" <<EOF
---
title: "$title"
lang: $meta_lang
---
EOF

            # Dołóż zawartość wszystkich plików po kolei
            while IFS= read -r f; do
              printf "\n\n" >> "$out"
              cat "$f" >> "$out"
            done < "${lang}-files.txt"

            echo "Built $out from $count files"
          }

          make_combined en
          make_combined pl

      - name: Build English PDF (from single file)
        shell: bash
        run: |
          if [ -s COMBINED_en.md ]; then
            pandoc -s COMBINED_en.md \
              --from=gfm+yaml_metadata_block \
              --toc -N \
              --resource-path=".:spec:docs:spec/en:spec/pl:docs/en:docs/pl" \
              --pdf-engine=xelatex \
              -V mainfont="DejaVu Serif" \
              -V lang=en-US \
              -o RUR_Project_Book_v1_en.pdf
          else
            echo "Skipping EN (no combined file)"
          fi

      - name: Build Polish PDF (from single file)
        shell: bash
        run: |
          if [ -s COMBINED_pl.md ]; then
            pandoc -s COMBINED_pl.md \
              --from=gfm+yaml_metadata_block \
              --toc -N \
              --resource-path=".:spec:docs:spec/en:spec/pl:docs/en:docs/pl" \
              --pdf-engine=xelatex \
              -V mainfont="DejaVu Serif" \
              -V lang=pl-PL \
              -o RUR_Project_Book_v1_pl.pdf
          else
            echo "Skipping PL (no combined file)"
          fi

      - name: Upload PDFs
        uses: actions/upload-artifact@v4
        with:
          name: RUR-Project-Books
          path: |
            RUR_Project_Book_v1_en.pdf
            RUR_Project_Book_v1_pl.pdf
          if-no-files-found: ignore
